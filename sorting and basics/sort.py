import time
list_float=[0.072, 0.885, 0.438, 0.322, 0.186, 0.887, 0.513, 0.415, 0.295, 0.793, 0.18, 0.964, 0.139, 0.202, 0.441, 0.257, 0.648, 0.721, 0.479, 0.31, 0.377, 0.984, 0.703, 0.263, 0.125, 0.425, 0.604, 0.493, 0.575, 0.28, 0.187, 0.504, 0.871, 0.046, 0.207, 0.993, 0.945, 0.997, 0.92, 0.093, 0.537, 0.15, 0.0, 0.023, 0.838, 0.371, 0.854, 0.727, 0.013, 0.512, 0.239, 0.575, 0.893, 0.293, 0.41, 0.304, 0.165, 0.866, 0.025, 0.191, 0.271, 0.074, 0.628, 0.469, 0.991, 0.103, 0.272, 0.008, 0.225, 0.716, 0.274, 0.424, 0.371, 0.37, 0.185, 0.657, 0.77, 0.491, 0.462, 0.058, 0.366, 0.007, 0.603, 0.177, 0.452, 0.378, 0.405, 0.578, 0.725, 0.345, 0.991, 0.151, 0.894, 0.195, 0.796, 0.999, 0.567, 0.719, 0.966, 0.153, 0.908, 0.889, 0.411, 0.035, 0.71, 0.528, 0.633, 0.228, 0.75, 0.107, 0.028, 0.381, 0.545, 0.788, 0.049, 0.349, 0.811, 0.124, 0.875, 0.704, 0.759, 0.38, 0.524, 0.622, 0.862, 0.585, 0.411, 0.092, 0.155, 0.133, 0.958, 0.596, 0.256, 0.795, 0.464, 0.973, 0.699, 0.684, 0.355, 0.297, 0.189, 0.813, 0.261, 0.384, 0.863, 0.979, 0.453, 0.811, 0.92, 0.555, 0.94, 0.021, 0.671, 0.746, 0.922, 0.242, 0.91, 0.67, 0.203, 0.406, 0.379, 0.189, 0.989, 0.27, 0.796, 0.696, 0.623, 0.554, 0.894, 0.118, 0.807, 0.996, 0.578, 0.853, 0.126, 0.196, 0.148, 0.376, 0.969, 0.049, 0.737, 0.265, 0.32, 0.513, 0.322, 0.429, 0.766, 0.992, 0.371, 0.477, 0.503, 0.198, 0.297, 0.739, 0.404, 0.602, 0.695, 0.117, 0.308, 0.774, 0.367, 0.373, 0.774, 0.986, 0.845, 0.733, 0.238, 0.026, 0.731, 0.028, 0.279, 0.577, 0.345, 0.223, 0.649, 0.418, 0.532, 0.718, 0.83, 0.176, 0.086, 0.902, 0.773, 0.878, 0.686, 0.354, 0.018, 0.584, 0.555, 0.852, 0.595, 0.789, 0.962, 0.011, 0.358, 0.039, 0.682, 0.344, 0.814, 0.299, 0.154, 0.7, 0.97, 0.641, 0.621, 0.532, 0.287, 0.558, 0.306, 0.779, 0.46, 0.257, 0.258, 0.97, 0.555, 0.879, 0.268, 0.429, 0.253, 0.532, 0.97, 0.935, 0.295, 0.371, 0.014, 0.829, 0.027, 0.133, 0.711, 0.599, 0.654, 0.357, 0.987, 0.039, 0.774, 0.838, 0.607, 0.096, 0.962, 0.114, 0.321, 0.454, 0.919, 0.786, 0.802, 0.045, 0.599, 0.242, 0.733, 0.09, 0.964, 0.143, 0.979, 0.954, 0.372, 0.588, 0.793, 0.409, 0.389, 0.146, 0.36, 0.934, 0.615, 0.568, 0.223, 0.089, 0.612, 0.551, 0.021, 0.821, 0.383, 0.213, 0.314, 0.698, 0.008, 0.446, 0.876, 0.317, 0.855, 0.773, 0.87, 0.21, 0.356, 0.646, 0.474, 0.534, 0.112, 0.78, 0.729, 0.594, 0.633, 0.727, 0.123, 0.764, 0.54, 0.544, 0.026, 0.708, 0.349, 0.414, 0.667, 0.913, 0.177, 0.229, 0.649, 0.985, 0.042, 0.889, 0.88, 0.469, 0.705, 0.009, 0.506, 0.588, 0.733, 0.273, 0.87, 0.899, 0.187, 0.162, 0.826, 0.331, 0.679, 0.821, 0.104, 0.359, 0.97, 0.036, 0.715, 0.994, 0.652, 0.574, 0.758, 0.841, 0.761, 0.426, 0.961, 0.955, 0.356, 0.253, 0.379, 0.374, 0.743, 0.117, 0.679, 0.401, 0.855, 0.234, 0.019, 0.986, 0.827, 0.989, 0.683, 0.089, 0.236, 0.172, 0.388, 0.549, 0.412, 0.33, 0.741, 0.346, 0.373, 0.399, 0.307, 0.429, 0.575, 0.372, 0.965, 0.511, 0.101, 0.055, 0.412, 0.064, 0.217, 0.677, 0.752, 0.02, 0.666, 0.732, 0.199, 0.549, 0.715, 0.157, 0.231, 0.634, 0.132, 0.243, 0.767, 0.349, 0.779, 0.829, 0.622, 0.33, 0.221, 0.325, 0.056, 0.474, 0.068, 0.584, 0.527, 0.095, 0.755, 0.732, 0.737, 0.78, 0.89, 0.187, 0.063, 0.139, 0.804, 0.886, 0.512, 0.666, 0.882, 0.888, 0.016, 0.691, 0.998, 0.76, 0.248, 0.395, 0.848, 0.714, 0.149, 0.115, 0.855, 0.961, 0.615, 0.726, 0.777, 0.892, 0.229, 0.526, 0.229, 0.005, 0.584, 0.24, 0.261, 0.028, 0.909, 0.925, 0.461, 0.967, 0.254, 0.035, 0.803, 0.552, 0.348, 0.186, 0.295, 0.911, 0.098, 0.938, 0.175, 0.738, 0.175, 0.712, 0.139, 0.126, 0.312, 0.017, 0.313, 0.915, 0.556, 0.693, 0.707, 0.591, 0.638, 0.626, 0.243, 0.981, 0.064, 0.778, 0.176, 0.734, 0.961, 0.266, 0.109, 0.581, 0.013, 0.766, 0.66, 0.918, 0.542, 0.823, 0.968, 0.977, 0.724, 0.533, 0.473, 0.432, 0.624, 0.619, 0.295, 0.986, 0.983, 0.962, 0.348, 0.914, 0.459, 0.582, 0.634, 0.119, 0.242, 0.367, 0.225, 0.759, 0.03, 0.591, 0.481, 0.845, 0.435, 0.468, 0.849, 0.346, 0.831, 0.112, 0.04, 0.211, 0.923, 0.616, 0.774, 0.928, 0.892, 0.881, 0.954, 0.765, 0.02, 0.639, 0.64, 0.976, 0.78, 0.397, 0.52, 0.972, 0.226, 0.419, 0.567, 0.509, 0.699, 0.345, 0.927, 0.88, 0.69, 0.388, 0.027, 0.663, 0.644, 0.787, 0.648, 0.025, 0.049, 0.795, 0.365, 0.698, 0.057, 0.98, 0.666, 0.296, 0.86, 0.704, 0.149, 0.048, 0.588, 0.011, 0.871, 0.217, 0.198, 0.761, 0.091, 0.49, 0.913, 0.303, 0.176, 0.301, 0.276, 0.866, 0.331, 0.226, 0.882, 0.62, 0.801, 0.594, 0.631, 0.774, 0.287, 0.723, 0.609, 0.895, 0.548, 0.288, 0.743, 0.012, 0.147, 0.723, 0.87, 0.691, 0.378, 0.905, 0.364, 0.849, 0.813, 0.839, 0.6, 0.824, 0.634, 0.173, 0.865, 0.516, 0.18, 0.261, 0.081, 0.246, 0.236, 0.291, 0.584, 0.036, 0.625, 0.469, 0.26, 0.938, 0.127, 0.294, 0.458, 0.321, 0.629, 0.325, 0.096, 0.263, 0.114, 0.174, 0.864, 0.293, 0.771, 0.08, 0.045, 0.55, 0.058, 0.773, 0.33, 0.1, 0.467, 0.337, 0.119, 0.595, 0.061, 0.736, 0.627, 0.219, 0.172, 0.087, 0.646, 0.138, 0.059, 0.702, 0.173, 0.528, 0.482, 0.179, 0.817, 0.083, 0.523, 0.867, 0.848, 0.735, 0.582, 0.746, 0.949, 0.698, 0.191, 0.587, 0.482, 0.773, 0.615, 0.932, 0.267, 0.348, 0.01, 0.3, 0.892, 0.677, 0.382, 0.331, 0.744, 0.667, 0.136, 0.057, 0.344, 0.869, 0.853, 0.236, 0.707, 0.822, 0.133, 0.227, 0.989, 0.326, 0.806, 0.696, 0.595, 0.685, 0.004, 0.601, 0.076, 0.171, 0.892, 0.212, 0.726, 0.205, 0.668, 0.4, 0.237, 0.147, 0.45, 0.669, 0.391, 0.593, 0.834, 0.997, 0.377, 0.395, 0.696, 0.84, 0.422, 0.13, 0.839, 0.03, 0.676, 0.258, 0.566, 0.034, 0.787, 0.214, 0.93, 0.794, 0.792, 0.65, 0.193, 0.332, 0.055, 0.87, 0.139, 0.163, 0.055, 0.011, 0.243, 0.761, 0.327, 0.239, 0.248, 0.104, 0.044, 0.974, 0.212, 0.183, 0.201, 0.4, 0.683, 0.998, 0.356, 0.411, 0.935, 0.881, 0.419, 0.994, 0.252, 0.951, 0.183, 0.956, 0.569, 0.485, 0.382, 0.742, 0.61, 0.378, 0.89, 0.256, 0.237, 0.452, 0.712, 0.499, 0.084, 0.291, 0.367, 0.1, 0.445, 0.592, 0.864, 0.654, 0.098, 0.85, 0.681, 0.744, 0.094, 0.713, 0.849, 0.05, 0.019, 0.675, 0.644, 0.717, 0.549, 0.629, 0.357, 0.142, 0.832, 0.044, 0.61, 0.627, 0.01, 0.21, 0.727, 0.898, 0.959, 0.351, 0.989, 0.952, 0.5, 0.985, 0.202, 0.754, 0.418, 0.087, 0.657, 0.881, 0.71, 0.64, 0.878, 0.341, 0.225, 0.943, 0.227, 0.63, 0.413, 0.236, 0.979, 0.65, 0.264, 0.773, 0.672, 0.707, 0.181, 0.431, 0.848, 0.418, 0.916, 0.641, 0.9, 0.76, 0.123, 0.898, 0.57, 0.974, 0.571, 0.091, 0.989, 0.21, 0.798, 0.761, 0.627, 0.326, 0.151, 0.104, 0.587, 0.734, 0.338, 0.469, 0.379, 0.819, 0.221, 0.11, 0.619, 0.974, 0.341, 0.097, 0.264, 0.24, 0.312, 0.881, 0.906, 0.521, 0.012, 0.315, 0.986, 0.73, 0.488, 0.132, 0.678, 0.52, 0.283, 0.065, 0.153, 0.146, 0.821, 0.219, 0.837, 0.405, 0.014, 0.399, 0.166, 0.749, 0.078, 0.204, 0.762, 0.215, 0.816, 0.967, 0.152, 0.364, 0.853, 0.382, 0.274, 0.289, 0.211, 0.943, 0.93, 0.539, 0.869, 0.497, 0.2, 0.964, 0.585, 0.641, 0.914, 0.849, 0.919, 0.501, 0.287, 0.254, 0.63, 0.209, 0.285, 0.742, 0.62, 0.035, 0.134, 0.211, 0.285, 0.249, 0.089, 0.496, 0.073, 0.326, 0.51, 0.988, 0.534, 0.37, 0.484, 0.602, 0.308, 0.504, 0.746, 0.7, 0.154, 0.343, 0.884, 0.963, 0.639, 0.061]
list=[496, 1071, 4130, 3302, 8738, 2665, 6875, 3025, 4374, 1968, 6348, 4564, 8024, 3016, 5737, 6944, 7790, 4254, 7010, 1734, 8908, 8056, 5344, 7893, 4968, 2650, 8360, 2512, 8197, 14, 8328, 6650, 8381, 3840, 350, 1977, 6150, 5997, 3017, 8876, 4005, 9785, 6781, 8443, 5773, 7822, 4054, 5821, 219, 3213, 3205, 843, 9455, 5921, 9536, 6755, 5111, 169, 7567, 7965, 7654, 6301, 9898, 8601, 3886, 4707, 9324, 4648, 297, 2587, 9914, 9321, 2143, 9847, 472, 2180, 6988, 1069, 9991, 7053, 3163, 7696, 19, 2251, 853, 4614, 2421, 7897, 5497, 8999, 4261, 9175, 3081, 8490, 5381, 1803, 2455, 860, 1228, 4174, 6140, 4328, 7330, 1477, 9216, 8645, 3904, 5822, 3860, 1430, 5053, 4654, 2370, 3660, 7631, 6193, 3232, 2718, 5234, 1678, 5420, 8752, 6012, 1875, 6400, 2642, 1959, 8113, 7958, 9406, 1986, 7447, 3012, 5289, 2753, 7814, 4627, 4476, 1953, 3939, 3179, 3967, 8446, 6234, 4661, 2069, 6468, 6142, 6715, 2262, 7565, 1054, 5986, 9940, 3149, 9936, 6027, 8073, 9851, 4648, 3578, 2719, 1511, 5255, 9518, 4001, 2982, 1451, 6675, 1122, 2264, 9515, 1078, 4025, 5005, 6703, 4843, 2586, 540, 8684, 7286, 3385, 1007, 1460, 6902, 623, 1547, 5460, 5257, 1554, 5653, 8506, 6522, 402, 9721, 4309, 8356, 8422, 5174, 2166, 1520, 8035, 9405, 3886, 2242, 8435, 7555, 5307, 2342, 7162, 9705, 5261, 3261, 1273, 5412, 1113, 2271, 6591, 2467, 6991, 2502, 730, 2892, 8894, 1188, 2087, 3263, 6886, 3631, 9369, 9844, 3280, 6932, 5927, 9552, 8436, 892, 2558, 8740, 8479, 8732, 6566, 3162, 3518, 1164, 9025, 6857, 259, 4556, 801, 9455, 4747, 2868, 5079, 9078, 5785, 5351, 4906, 6255, 4202, 1302, 3544, 6634, 4895, 2261, 3423, 7739, 6849, 8211, 8037, 1298, 8912, 1867, 6784, 991, 859, 3547, 3967, 8152, 5108, 2527, 6471, 5861, 5839, 2032, 805, 7177, 1038, 6780, 8646, 5713, 9276, 2928, 99, 9649, 9890, 8705, 6714, 2308, 1531, 8111, 7392, 2872, 7670, 5197, 4339, 8432, 6127, 5210, 54, 9432, 8697, 8024, 1028, 4922, 2617, 1058, 1911, 6842, 1267, 7762, 302, 6765, 1019, 665, 4629, 2750, 8716, 4780, 2682, 9886, 1557, 8341, 4400, 5197, 6609, 246, 8696, 3792, 6630, 5037, 3370, 3119, 6410, 1847, 9889, 9607, 2158, 187, 7709, 5820, 1135, 6801, 9768, 2858, 4255, 2870, 968, 3293, 3085, 2450, 3508, 1343, 4318, 8926, 2543, 948, 952, 529, 3688, 8870, 2752, 7584, 903, 5723, 81, 5558, 7509, 477, 2396, 5596, 4282, 7329, 3719, 8658, 525, 3052, 1297, 8274, 1271, 2169, 5906, 2095, 554, 9306, 8598, 1393, 1139, 3266, 3839, 6486, 1665, 9646, 1785, 7081, 4391, 3904, 7078, 987, 4689, 9003, 3070, 4203, 7871, 3105, 5569, 9848, 5366, 931, 7715, 4746, 7989, 2650, 8813, 9893, 6148, 8243, 9884, 3616, 6218, 5084, 5538, 4858, 6550, 4019, 6387, 6042, 8223, 1878, 6288, 9848, 3228, 4510, 4378, 7134, 7991, 8657, 5629, 1875, 356, 91, 3711, 8094, 1746, 9122, 1061, 9218, 3061, 8859, 307, 4732, 3110, 1526, 9481, 6534, 218, 9316, 1590, 3974, 9703, 2535, 7353, 6363, 726, 8089, 8968, 8746, 6206, 4631, 7590, 6471, 1381, 2198, 869, 3224, 9797, 8193, 4368, 5514, 875, 989, 6516, 5852, 494, 795, 480, 4260, 1350, 2760, 8209, 8771, 815, 9984, 7564, 394, 2972, 4458, 5481, 9201, 7148, 9204, 613, 5941, 3783, 6371, 1155, 2822, 1442, 2140, 8114, 2556, 9698, 7044, 8544, 7750, 6201, 9241, 9082, 8897, 9396, 7968, 5645, 4215, 634, 5990, 199, 5389, 9755, 4805, 3288, 767, 5583, 2728, 4800, 8714, 3260, 9004, 4572, 3211, 7236, 6897, 4699, 4811, 1355, 581, 2181, 3226, 9944, 3254, 1243, 78, 628, 4440, 4276, 6281, 9170, 4515, 6450, 3502, 6376, 1341, 7712, 1813, 329, 3942, 6874, 8109, 4801, 5693, 6688, 8427, 4742, 9377, 8812, 8795, 7688, 7591, 5819, 2934, 7779, 6793, 2094, 8950, 9019, 9780, 9319, 3458, 889, 5882, 156, 5040, 9143, 842, 3816, 3945, 1665, 8776, 613, 3998, 4559, 9204, 4327, 2841, 2048, 3589, 4544, 4572, 9854, 5928, 4278, 1826, 7039, 4991, 4164, 9264, 8603, 5424, 1961, 4319, 6553, 7855, 4313, 4585, 4154, 5330, 5344, 9739, 5228, 4709, 1034, 4, 8571, 7799, 5083, 6509, 1900, 5079, 9380, 8190, 8241, 19, 4857, 4435, 9426, 8686, 4309, 6912, 454, 4424, 1846, 9149, 4285, 1968, 6152, 3296, 7180, 7724, 6438, 2345, 1447, 9253, 9152, 2094, 9287, 2815, 2872, 5986, 104, 7224, 9583, 9334, 2172, 6293, 4292, 6499, 8034, 1134, 1582, 1517, 9027, 3179, 8430, 1271, 7142, 720, 5496, 323, 4775, 7544, 2027, 928, 4729, 7633, 5549, 2474, 1897, 7306, 1457, 5493, 2827, 3591, 7421, 9679, 6702, 5309, 2408, 4833, 7094, 9270, 3930, 2051, 1278, 7618, 4255, 8812, 7834, 5098, 1208, 2966, 2083, 6235, 4585, 5612, 3551, 264, 3986, 7223, 7388, 7201, 1295, 9403, 4885, 2145, 5793, 5249, 699, 7488, 4009, 8473, 6078, 3934, 1252, 9766, 4297, 2266, 8834, 5070, 8186, 4239, 2836, 9045, 5292, 5007, 6187, 7739, 4711, 3924, 8506, 4297, 17, 3651, 7949, 5657, 7468, 6772, 119, 5859, 4484, 6875, 4781, 9114, 819, 1271, 8437, 2622, 8624, 9328, 3578, 6764, 3219, 4987, 4041, 1172, 8356, 5792, 7931, 8805, 2399, 6627, 3514, 9734, 7884, 1024, 4643, 2769, 7364, 2951, 9669, 7391, 2984, 7044, 4625, 505, 1780, 9694, 2114, 5255, 4612, 5846, 6648, 429, 2575, 779, 5316, 879, 9321, 7318, 1163, 1823, 589, 2944, 5894, 9695, 4738, 9686, 5248, 9134, 7547, 8871, 164, 1482, 2875, 7958, 3495, 9607, 323, 555, 1792, 51, 5071, 8644, 3847, 1097, 4937, 8995, 9554, 8733, 93, 4942, 1158, 220, 4904, 6222, 3159, 7546, 7857, 6776, 938, 7063, 3552, 9162, 4201, 7539, 10000, 9243, 1072, 1332, 6601, 9734, 1458, 6812, 3097, 6792, 5767, 3239, 8901, 8265, 6706, 7761, 6476, 1032, 6883, 7226, 9935, 1833, 4324, 5403, 1065, 5278, 8509, 4943, 4028, 2933, 6554, 5373, 8478, 5416, 7032, 8315, 1035, 5342, 2169, 8808, 8975, 3083, 4210, 7355, 8212, 8984, 7484, 7673, 3507, 5234, 5769, 9104, 9595, 3938, 4598, 7809, 5934, 8040, 3356, 4591, 3085, 5802, 8937, 1772, 8263, 4632, 1172, 1603, 9442, 1965, 6577, 7474, 8209, 3223, 422, 7683, 986, 6523, 3593, 7200, 7920, 8559, 8989, 8549, 5046, 7003, 2813, 1764, 7332, 8620, 4914, 7821, 410, 1080, 6703, 8931, 5843, 746, 1531, 3913, 2738, 9191, 9262, 2409, 6456, 882, 239, 3681, 6016, 1369, 4463, 4168, 261, 7139, 5181, 3748, 7250, 1385, 1919, 3166, 7956, 9733, 9950, 8006, 1980, 3174, 1891]
def sort():
    global list
    while True:
        list=[496, 1071, 4130, 3302, 8738, 2665, 6875, 3025, 4374, 1968, 6348, 4564, 8024, 3016, 5737, 6944, 7790, 4254, 7010, 1734, 8908, 8056, 5344, 7893, 4968, 2650, 8360, 2512, 8197, 14, 8328, 6650, 8381, 3840, 350, 1977, 6150, 5997, 3017, 8876, 4005, 9785, 6781, 8443, 5773, 7822, 4054, 5821, 219, 3213, 3205, 843, 9455, 5921, 9536, 6755, 5111, 169, 7567, 7965, 7654, 6301, 9898, 8601, 3886, 4707, 9324, 4648, 297, 2587, 9914, 9321, 2143, 9847, 472, 2180, 6988, 1069, 9991, 7053, 3163, 7696, 19, 2251, 853, 4614, 2421, 7897, 5497, 8999, 4261, 9175, 3081, 8490, 5381, 1803, 2455, 860, 1228, 4174, 6140, 4328, 7330, 1477, 9216, 8645, 3904, 5822, 3860, 1430, 5053, 4654, 2370, 3660, 7631, 6193, 3232, 2718, 5234, 1678, 5420, 8752, 6012, 1875, 6400, 2642, 1959, 8113, 7958, 9406, 1986, 7447, 3012, 5289, 2753, 7814, 4627, 4476, 1953, 3939, 3179, 3967, 8446, 6234, 4661, 2069, 6468, 6142, 6715, 2262, 7565, 1054, 5986, 9940, 3149, 9936, 6027, 8073, 9851, 4648, 3578, 2719, 1511, 5255, 9518, 4001, 2982, 1451, 6675, 1122, 2264, 9515, 1078, 4025, 5005, 6703, 4843, 2586, 540, 8684, 7286, 3385, 1007, 1460, 6902, 623, 1547, 5460, 5257, 1554, 5653, 8506, 6522, 402, 9721, 4309, 8356, 8422, 5174, 2166, 1520, 8035, 9405, 3886, 2242, 8435, 7555, 5307, 2342, 7162, 9705, 5261, 3261, 1273, 5412, 1113, 2271, 6591, 2467, 6991, 2502, 730, 2892, 8894, 1188, 2087, 3263, 6886, 3631, 9369, 9844, 3280, 6932, 5927, 9552, 8436, 892, 2558, 8740, 8479, 8732, 6566, 3162, 3518, 1164, 9025, 6857, 259, 4556, 801, 9455, 4747, 2868, 5079, 9078, 5785, 5351, 4906, 6255, 4202, 1302, 3544, 6634, 4895, 2261, 3423, 7739, 6849, 8211, 8037, 1298, 8912, 1867, 6784, 991, 859, 3547, 3967, 8152, 5108, 2527, 6471, 5861, 5839, 2032, 805, 7177, 1038, 6780, 8646, 5713, 9276, 2928, 99, 9649, 9890, 8705, 6714, 2308, 1531, 8111, 7392, 2872, 7670, 5197, 4339, 8432, 6127, 5210, 54, 9432, 8697, 8024, 1028, 4922, 2617, 1058, 1911, 6842, 1267, 7762, 302, 6765, 1019, 665, 4629, 2750, 8716, 4780, 2682, 9886, 1557, 8341, 4400, 5197, 6609, 246, 8696, 3792, 6630, 5037, 3370, 3119, 6410, 1847, 9889, 9607, 2158, 187, 7709, 5820, 1135, 6801, 9768, 2858, 4255, 2870, 968, 3293, 3085, 2450, 3508, 1343, 4318, 8926, 2543, 948, 952, 529, 3688, 8870, 2752, 7584, 903, 5723, 81, 5558, 7509, 477, 2396, 5596, 4282, 7329, 3719, 8658, 525, 3052, 1297, 8274, 1271, 2169, 5906, 2095, 554, 9306, 8598, 1393, 1139, 3266, 3839, 6486, 1665, 9646, 1785, 7081, 4391, 3904, 7078, 987, 4689, 9003, 3070, 4203, 7871, 3105, 5569, 9848, 5366, 931, 7715, 4746, 7989, 2650, 8813, 9893, 6148, 8243, 9884, 3616, 6218, 5084, 5538, 4858, 6550, 4019, 6387, 6042, 8223, 1878, 6288, 9848, 3228, 4510, 4378, 7134, 7991, 8657, 5629, 1875, 356, 91, 3711, 8094, 1746, 9122, 1061, 9218, 3061, 8859, 307, 4732, 3110, 1526, 9481, 6534, 218, 9316, 1590, 3974, 9703, 2535, 7353, 6363, 726, 8089, 8968, 8746, 6206, 4631, 7590, 6471, 1381, 2198, 869, 3224, 9797, 8193, 4368, 5514, 875, 989, 6516, 5852, 494, 795, 480, 4260, 1350, 2760, 8209, 8771, 815, 9984, 7564, 394, 2972, 4458, 5481, 9201, 7148, 9204, 613, 5941, 3783, 6371, 1155, 2822, 1442, 2140, 8114, 2556, 9698, 7044, 8544, 7750, 6201, 9241, 9082, 8897, 9396, 7968, 5645, 4215, 634, 5990, 199, 5389, 9755, 4805, 3288, 767, 5583, 2728, 4800, 8714, 3260, 9004, 4572, 3211, 7236, 6897, 4699, 4811, 1355, 581, 2181, 3226, 9944, 3254, 1243, 78, 628, 4440, 4276, 6281, 9170, 4515, 6450, 3502, 6376, 1341, 7712, 1813, 329, 3942, 6874, 8109, 4801, 5693, 6688, 8427, 4742, 9377, 8812, 8795, 7688, 7591, 5819, 2934, 7779, 6793, 2094, 8950, 9019, 9780, 9319, 3458, 889, 5882, 156, 5040, 9143, 842, 3816, 3945, 1665, 8776, 613, 3998, 4559, 9204, 4327, 2841, 2048, 3589, 4544, 4572, 9854, 5928, 4278, 1826, 7039, 4991, 4164, 9264, 8603, 5424, 1961, 4319, 6553, 7855, 4313, 4585, 4154, 5330, 5344, 9739, 5228, 4709, 1034, 4, 8571, 7799, 5083, 6509, 1900, 5079, 9380, 8190, 8241, 19, 4857, 4435, 9426, 8686, 4309, 6912, 454, 4424, 1846, 9149, 4285, 1968, 6152, 3296, 7180, 7724, 6438, 2345, 1447, 9253, 9152, 2094, 9287, 2815, 2872, 5986, 104, 7224, 9583, 9334, 2172, 6293, 4292, 6499, 8034, 1134, 1582, 1517, 9027, 3179, 8430, 1271, 7142, 720, 5496, 323, 4775, 7544, 2027, 928, 4729, 7633, 5549, 2474, 1897, 7306, 1457, 5493, 2827, 3591, 7421, 9679, 6702, 5309, 2408, 4833, 7094, 9270, 3930, 2051, 1278, 7618, 4255, 8812, 7834, 5098, 1208, 2966, 2083, 6235, 4585, 5612, 3551, 264, 3986, 7223, 7388, 7201, 1295, 9403, 4885, 2145, 5793, 5249, 699, 7488, 4009, 8473, 6078, 3934, 1252, 9766, 4297, 2266, 8834, 5070, 8186, 4239, 2836, 9045, 5292, 5007, 6187, 7739, 4711, 3924, 8506, 4297, 17, 3651, 7949, 5657, 7468, 6772, 119, 5859, 4484, 6875, 4781, 9114, 819, 1271, 8437, 2622, 8624, 9328, 3578, 6764, 3219, 4987, 4041, 1172, 8356, 5792, 7931, 8805, 2399, 6627, 3514, 9734, 7884, 1024, 4643, 2769, 7364, 2951, 9669, 7391, 2984, 7044, 4625, 505, 1780, 9694, 2114, 5255, 4612, 5846, 6648, 429, 2575, 779, 5316, 879, 9321, 7318, 1163, 1823, 589, 2944, 5894, 9695, 4738, 9686, 5248, 9134, 7547, 8871, 164, 1482, 2875, 7958, 3495, 9607, 323, 555, 1792, 51, 5071, 8644, 3847, 1097, 4937, 8995, 9554, 8733, 93, 4942, 1158, 220, 4904, 6222, 3159, 7546, 7857, 6776, 938, 7063, 3552, 9162, 4201, 7539, 10000, 9243, 1072, 1332, 6601, 9734, 1458, 6812, 3097, 6792, 5767, 3239, 8901, 8265, 6706, 7761, 6476, 1032, 6883, 7226, 9935, 1833, 4324, 5403, 1065, 5278, 8509, 4943, 4028, 2933, 6554, 5373, 8478, 5416, 7032, 8315, 1035, 5342, 2169, 8808, 8975, 3083, 4210, 7355, 8212, 8984, 7484, 7673, 3507, 5234, 5769, 9104, 9595, 3938, 4598, 7809, 5934, 8040, 3356, 4591, 3085, 5802, 8937, 1772, 8263, 4632, 1172, 1603, 9442, 1965, 6577, 7474, 8209, 3223, 422, 7683, 986, 6523, 3593, 7200, 7920, 8559, 8989, 8549, 5046, 7003, 2813, 1764, 7332, 8620, 4914, 7821, 410, 1080, 6703, 8931, 5843, 746, 1531, 3913, 2738, 9191, 9262, 2409, 6456, 882, 239, 3681, 6016, 1369, 4463, 4168, 261, 7139, 5181, 3748, 7250, 1385, 1919, 3166, 7956, 9733, 9950, 8006, 1980, 3174, 1891]
        choices=["1: bubble sort","2: insertion sort","3: selection sort","4: quick sort", "5: merge sort","6: heap sort","7: radix sort","8: count sort","9: bucket sort"]
        for k in choices:
            print k
        choice=int(raw_input("enter yout choice "))
        if choice==1:
            a=time.clock()
            bubbleSort()
            print "Time taken is "+str(time.clock()-a)

        elif choice==2:
            a=time.clock()
            insertionSort(list)
            print "Time taken is "+str(time.clock()-a)
        elif choice==3:
            a=time.clock()
            selectionSort()
            print "Time taken is "+str(time.clock()-a)
        elif choice==4:
            a=time.clock()
            n = len(list)
            quickSort(0,n-1)
            print "Time taken is "+str(time.clock()-a)
            
        elif choice==5:
            a=time.clock()
            n = len(list)
            mergeSort(0,n-1)
            print "Time taken is "+str(time.clock()-a)
        elif choice==6:
            a=time.clock()
            n = len(list)
            heapSort()
            print "Time taken is "+str(time.clock()-a)
        elif choice==7:
            a=time.clock()
            radixSort()
            print "Time taken is "+str(time.clock()-a)
        elif choice==8:
            a=time.clock()
            countSort()
            print "Time taken is "+str(time.clock()-a)
        elif choice==9:
            a=time.clock()
            bucket()
            print "Time taken is "+str(time.clock()-a)
        
        print list



def bubbleSort():
    for i in range(len(list)-1,-1,-1):
        for j in range(i):
            if list[j]>list[j+1]:
                list[j+1],list[j]=list[j],list[j+1]

    

    
def insertionSort(list):
    for i in range (1, len(list)):
        temp=list[i]
        ptr=i-1
        while(ptr>=0) and list[ptr]>temp:
            list[ptr+1]=list[ptr]
            ptr=ptr-1
        list[ptr+1]=temp
     

     

def selectionSort():
    for i in range(0, len (list)):
        min = i
        for j in range(i + 1, len(list)):
            if list[j] < list[min]:
                min = j
        list[min],list[i]=list[i],list[min]
    

    
def partition(low,high):
    global list
    i=low-1     
    pivot=list[high]
    for j in range(low,high):
        if list[j]<=pivot:
            i+=1
            list[i],list[j]=list[j],list[i]
    list[i+1],list[high]=list[high],list[i+1]
    return i+1
 

def quickSort(low,high):
    global list
    if low < high:
        pi = partition(low,high)
        quickSort(low, pi-1)
        quickSort(pi+1, high)



        
def merge(l, m, r):
    global list
    n1=m-l+1
    n2=r-m
    L=[0]*(n1)
    R=[0]*(n2)
    i=0   
    j=0   
    k=l 
    for i in range(0,n1):
        L[i]=list[l+i]
    for j in range(0,n2):
        R[j]=list[m+1+j]
    i=0   
    j=0   
    k=l 
    
    while i<n1 and j<n2 :
        if L[i]<=R[j]:
            list[k]=L[i]
            i+=1
        else:
            list[k]=R[j]
            j+=1
        k+=1
    while i<n1:
        list[k]=L[i]
        i+=1
        k+=1
    while j<n2:
        list[k]=R[j]
        j+=1
        k+=1

def mergeSort(l,r):
    global list
    if l<r:
        m=(l+(r-1))/2
        mergeSort(l,m)
        mergeSort(m+1,r)
        merge(l,m,r)

def heapify(n,i):
    global list
    largest=i  
    L=2*i+1
    r=2*i+2  
    if L<n and list[i]<list[L]:
        largest=L
    if r<n and list[largest]<list[r]:
        largest=r
    if largest!=i:
        list[i],list[largest]=list[largest],list[i] 
        heapify(n,largest)
 

def heapSort():
    global list
    n=len(list)
    for i in range(n-1,-1,-1):
        heapify(n,i)
    for i in range(n-1,0,-1):
        list[i],list[0]=list[0],list[i]   
        heapify(i,0)


def radix_count(exp1):
    global list
    n=len(list)
    output=[0]*(n)
    count=[0]*(10)
    for i in range(0, n):
        index=(list[i]/exp1)
        count[(index)%10]+=1
    for i in range(1,10):
        count[i]+=count[i-1]
    i=n-1
    while i>=0:
        index=(list[i]/exp1)
        output[count[(index)%10]-1]=list[i]
        count[(index)%10]-=1
        i-=1
    i=0
    for i in range(0,len(list)):
        list[i]=output[i]

def radixSort():
    global list
    max1=max(list)
    exp=1
    while max1/exp>0:
        radix_count(exp)
        exp*=10


def countSort():
    global list
    n = len(list)
    m = max(list) + 1
    count = [0] * m
    for a in list:
        count[a] += 1
    k=0
    for i in range(m):
        for j in range(count[i]):
            list[k]=i
            k+=1

def bucket():
    global list_float, list
    a=[]
    for i in range(100):
        a.append([])
    for i in list_float:
        a[int(100*i)].append(i)
    for i in range(100):
        insertionSort(a[i])
    k=0
    for i in a:
        for j in i:
            list[k]=j
            k+=1

    
        
    

